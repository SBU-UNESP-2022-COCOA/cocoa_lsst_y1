#timing: True
debug: False
stop_at_error: False

likelihood:
  gaussian_mixture:
    means: [ [-5,0],]
    covs:  [ [[1, 0.75],
              [0.75, 1]],]
params:
  A:
    prior:
      dist: norm
      loc: 5
      scale: 1
    latex: A
  B:
    prior:
      min: -10
      max: 10
    latex: B

sampler:
  mcmc:
    # ---------------------------------------------------------------------
    # File (w/ path) or matrix defining a covariance matrix for the proposal:
    # - null (default): will be generated from params info (prior and proposal)
    # - matrix: remember to set `covmat_params` to the parameters in the matrix
    #covmat: "./projects/lsst_y1/EXAMPLE_MCMC3.covmat"
    covmat_params:
    # --------------------------------------
    # --------------------------------------
    # Proposal covariance matrix learning
    # --------------------------------------
    # --------------------------------------
    learn_proposal: True
    # Don't learn if convergence better than...
    learn_proposal_Rminus1_min: 0.03
    # (even earlier if a param is not in the given covariance matrix)
    learn_proposal_Rminus1_max_early: 2000.
    # --------------------------------------
    # --------------------------------------
    # Convergence and stopping
    # --------------------------------------
    # --------------------------------------
    # Maximum number of posterior evaluations
    max_samples: .inf
    # Gelman-Rubin R-1 on means
    Rminus1_stop: 0.01
    # Gelman-Rubin R-1 on std deviations
    Rminus1_cl_stop: 0.1
    Rminus1_cl_level: 0.95
    # --------------------------------------
    # --------------------------------------
    # Exploiting speed hierarchy
    # --------------------------------------
    # --------------------------------------
    measure_speeds: False
    drag: False
    oversample_power: 0.6
    oversample_thin: True

    max_tries: 100000 # need much larger than normal for rotation
    burn_in: 0
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    # When no MPI used, number of fractions of the chain to compare
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    Rminus1_single_split: 4

output: ./projects/lsst_y1/chains/EXAMPLE_MCMC81
