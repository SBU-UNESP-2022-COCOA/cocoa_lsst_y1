timing: True
debug: False
stop_at_error: True

likelihood:
  sn.pantheon:
    path: ./external_modules/data/sn_data
  bao.sixdf_2011_bao:
    path: ./external_modules/data/
  bao.sdss_dr7_mgs:
    path: ./external_modules/data/
  bao.sdss_dr12_consensus_bao:
    path: ./external_modules/data/
  # lsst_y1.EE_bound: null

params:
  logA:
    prior:
      min: 2.83321
      max: 3.21888
    ref:
      dist: norm
      loc: 3.0448
      scale: 0.05
    proposal: 0.05
    latex: \log(10^{10} A_\mathrm{s})
    # drop: true
  # As:
  #   value: 'lambda logA: 1e-10*np.exp(logA)'
  #   latex: A_\mathrm{s}
  ns:
    prior:
      min: 0.92
      max: 1.00
    ref:
      dist: norm
      loc: 0.96605
      scale: 0.01
    proposal: 0.01
    latex: n_\mathrm{s}
  H0:
    prior:
      min: 61
      max: 73
    ref:
      dist: norm
      loc: 67.32
      scale: 5
    proposal: 3
    latex: H_0
  omegab:
    prior:
      min: 0.04
      max: 0.06
    ref:
      dist: norm
      loc: 0.0495
      scale: 0.004
    proposal: 0.004
    latex: \Omega_\mathrm{b}
    # drop: True
  omegam:
    prior:
      min: 0.24
      max: 0.40
    ref:
      dist: norm
      loc: 0.316
      scale: 0.02
    proposal: 0.02
    latex: \Omega_\mathrm{m}
    # drop: True
  w:
    value: -1
    latex: w_{0,\mathrm{DE}}
  mnu:
    value: 0.06
  tau:
    value: 0.05
    latex: \tau_\mathrm{reio}
  # omegamh2:
  #   derived: 'lambda omegam, H0: omegam*(H0/100)**2'
  #   latex: \Omega_\mathrm{m} h^2
  #   drop: True
  omegabh2:
    derived: 'lambda omegab, H0: omegab*(H0/100)**2'
    latex: \Omega_\mathrm{m} h^2
    derived: True

theory:
  camb:
    path: ./external_modules/code/CAMB
    use_renames: True
    extra_args:
      halofit_version: takahashi
      AccuracyBoost: 1.05
      lens_potential_accuracy: 1.05
      num_massive_neutrinos: 1
      nnu: 3.046
      dark_energy_model: ppf
      accurate_massive_neutrino_transfers: false
      k_per_logint: 20

sampler:
  mcmc:
    # ---------------------------------------------------------------------
    # File (w/ path) or matrix defining a covariance matrix for the proposal:
    # - null (default): will be generated from params info (prior and proposal)
    # - matrix: remember to set `covmat_params` to the parameters in the matrix
    # covmat: "./projects/lsst_y1/PRIOR_2.covmat"
    covmat_params:
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    # Proposal covariance matrix learning
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    learn_proposal: True
    # Don't learn if convergence better than...
    learn_proposal_Rminus1_min: 0.03
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    # Convergence and stopping
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    # Maximum number of posterior evaluations
    max_samples: .inf
    # Gelman-Rubin R-1 on means
    Rminus1_stop: 0.02
    # Gelman-Rubin R-1 on std deviations
    Rminus1_cl_stop: 0.2
    Rminus1_cl_level: 0.95
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    # Exploiting speed hierarchy
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    measure_speeds: False
    drag: False
    oversample_power: 0.6
    oversample_thin: True
    blocking:
      - [1,
          [
            logA, ns, H0, omegab, omegam
          ]
        ]
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    # Avoid chain getting suck forever
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    max_tries: 10000
    burn_in: 0
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    # When no MPI used, number of fractions of the chain to compare
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    Rminus1_single_split: 4


output: ./projects/lsst_y1/chains/EXAMPLE_MCMC16
