timing: True
debug: True
stop_at_error: True

likelihood:
  lsst_y1.lsst_emu_3x2pt_lcdm:
    data_vector_file: "./projects/lsst_y1/data/dv1_lsst_y1_theory.modelvector"
    emu_file: "./projects/lsst_y1/emulator_output/supranta_emu/model"
    mask_file: "./projects/lsst_y1/data/lsst_3x2_cs_only.mask" # effectively block out 2x2pt terms
    data_vector_used_for_training: "./projects/lsst_y1/data/dv1_lsst_y1_theory.modelvector" #This only exist for the way supranta trains the emulator
    n_pcas_baryon: 2


params:
  logA:
    prior:
      min: 1.61
      max: 3.91
    ref:
      dist: norm
      loc: 3.0675
      scale: 0.005
    proposal: 0.005
    latex: \log(10^{10} A_\mathrm{s})
    drop: true
  As:
    value: 'lambda logA: 1e-10*np.exp(logA)'
    latex: A_\mathrm{s}
  ns:
    prior:
      min: 0.87
      max: 1.07
    ref:
      dist: norm
      loc: 0.97
      scale: 0.003
    proposal: 0.003
    latex: n_\mathrm{s}
  H0:
    prior:
      min: 55
      max: 91
    ref:
      dist: norm
      loc: 69.0
      scale: 0.3
    proposal: 0.3
    latex: H_0
  omegabh2:
    prior:
      min: 0.01
      max: 0.04
    ref:
      dist: norm
      loc: 0.0228528
      scale: 0.001
    proposal: 0.001
    latex: \Omega_\mathrm{b} h^2
  omegach2:
    prior:
      min: 0.001
      max: 0.99
    ref:
      dist: norm
      loc: 0.1199772
      scale: 0.001
    proposal: 0.001
    latex: \Omega_\mathrm{c} h^2
  mnu:
    value: 0.06
  tau:
    value: 0.0543
    latex: \tau_\mathrm{reio}
  omegal:
    latex: \Omega_\Lambda
  omegam:
    latex: \Omega_\mathrm{m}
  omegamh2:
    derived: 'lambda omegam, H0: omegam*(H0/100)**2'
    latex: \Omega_\mathrm{m} h^2
  omegab:
    derived: 'lambda omegabh2, H0: omegabh2/((H0/100)**2)'
    latex: \Omega_\mathrm{b}
  omegac:
    derived: 'lambda omegach2, H0: omegach2/((H0/100)**2)'
    latex: \Omega_\mathrm{c}
  sigma8:
    latex: \sigma_8
  s8h5:
    derived: 'lambda sigma8, H0: sigma8*(H0*1e-2)**(-0.5)'
    latex: \sigma_8/h^{0.5}
  s8omegamp5:
    derived: 'lambda sigma8, omegam: sigma8*omegam**0.5'
    latex: \sigma_8 \Omega_\mathrm{m}^{0.5}
  s8omegamp25:
    derived: 'lambda sigma8, omegam: sigma8*omegam**0.25'
    latex: \sigma_8 \Omega_\mathrm{m}^{0.25}
  A:
    derived: 'lambda As: 1e9*As'
    latex: 10^9 A_\mathrm{s}
  age:
    latex: '{\rm{Age}}/\mathrm{Gyr}'
  rdrag:
    latex: r_\mathrm{drag}
  yheused:
    latex: Y_P^\mathrm{BBN}
  omegan2:
    latex: \Omega_\mathrm{\\nu} h^2
  omegan:
    derived: 'lambda omegan2, H0: omegan2/((H0/100)**2)'
    latex: \Omega_\mathrm{\\nu}
  zstar:
    latex: z_*
  rstar:
    latex: r_*
  thetastar:
    latex: 100\theta_*
  DAstar:
    latex: D_\mathrm{A}/\mathrm{Gpc}
  zdrag:
    latex: z_\mathrm{drag}
  kd:
    latex: k_\mathrm{D}
  thetad:
    latex: 100\theta_\mathrm{D}
  zeq:
    latex: z_\mathrm{eq}
  keq:
    latex: k_\mathrm{eq}
  thetaeq:
    latex: 100\theta_\mathrm{eq}
  thetarseq:
    latex: 100\theta_\mathrm{s,eq}
  DHBBN:
    derived: "lambda DH: 10**5*DH"
    latex: 10^5 \mathrm{D}/\mathrm{H}
  zrei:
    latex: z_\mathrm{re}
  nrun:
    value: 0.0
    latex: n_\mathrm{run}
  nrunrun:
    value: 0.0
    latex: n_\mathrm{run,run}
  omegak:
    value: 0.0
    latex: \Omega_k

theory:
  camb:
    path: ./external_modules/code/CAMB
    use_renames: True
    extra_args:
      halofit_version: takahashi
      AccuracyBoost: 1.15
      lens_potential_accuracy: 1.1
      num_massive_neutrinos: 1
      nnu: 3.046
      dark_energy_model: ppf
      accurate_massive_neutrino_transfers: false
      k_per_logint: 20

sampler:
  evaluate:
    N: 3
    override:
      # fiducial
      logA: 3.0675
      ns: 0.97
      H0: 69.0
      omegabh2: 0.0228528
      omegach2: 0.1199772
      LSST_DZ_S1: 0.0
      LSST_DZ_S2: 0.0
      LSST_DZ_S3: 0.0
      LSST_DZ_S4: 0.0
      LSST_DZ_S5: 0.0
      LSST_A1_1: 0.5
      LSST_A1_2: 0.0
      LSST_M1: 0.0
      LSST_M2: 0.0
      LSST_M3: 0.0
      LSST_M4: 0.0
      LSST_M5: 0.0
      #lens params
      LSST_DZ_L1: 0.0
      LSST_DZ_L2: 0.0
      LSST_DZ_L3: 0.0
      LSST_DZ_L4: 0.0
      LSST_DZ_L5: 0.0
      LSST_B1_1: 1.239999999999999991
      LSST_B1_2: 1.360000000000000098
      LSST_B1_3: 1.469999999999999973
      LSST_B1_4: 1.600000000000000089
      LSST_B1_5: 1.760000000000000009

output: ./projects/lsst_y1/chains/EXAMPLE_EVALUATE_TEST
